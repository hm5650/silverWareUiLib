-- SilverWare UI Library v2.0
-- GitHub: https://raw.githubusercontent.com/hm5650/silverWareUiLib/main/SilverWareUiLib.lua

local UILib = {}
UILib.__index = UILib

-- Default theme with modern colors
local DEFAULT_THEME = {
    MainBackground = Color3.fromRGB(30, 30, 40),
    TitleBar = Color3.fromRGB(25, 25, 35),
    Button = Color3.fromRGB(60, 60, 80),
    ButtonHover = Color3.fromRGB(80, 80, 100),
    ToggleOn = Color3.fromRGB(100, 200, 100),
    ToggleOff = Color3.fromRGB(200, 100, 100),
    Text = Color3.fromRGB(240, 240, 240),
    TextBox = Color3.fromRGB(50, 50, 60),
    ScrollBar = Color3.fromRGB(80, 80, 90),
    Accent = Color3.fromRGB(150, 120, 220)
}

function UILib.new(title, customTheme)
    local self = setmetatable({}, UILib)
    
    -- Merge custom theme with defaults
    self.theme = setmetatable(customTheme or {}, {__index = DEFAULT_THEME})
    
    -- Create main UI container
    self.gui = Instance.new("ScreenGui")
    self.gui.Name = "SilverWareUI_"..tostring(math.random(1, 10000))
    self.gui.ResetOnSpawn = false
    self.gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    self.gui.Parent = game:GetService("CoreGui")
    
    -- Main window frame
    self.mainFrame = Instance.new("Frame")
    self.mainFrame.Name = "MainWindow"
    self.mainFrame.Size = UDim2.new(0, 200, 0, 250) -- Larger default size
    self.mainFrame.Position = UDim2.new(0.5, -100, 0.5, -125)
    self.mainFrame.BackgroundColor3 = self.theme.MainBackground
    self.mainFrame.BackgroundTransparency = 0.05
    self.mainFrame.Active = true
    self.mainFrame.Draggable = true
    self.mainFrame.ClipsDescendants = true
    self.mainFrame.Parent = self.gui
    
    -- Add rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = self.mainFrame
    
    -- Title bar
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = self.theme.TitleBar
    titleBar.Parent = self.mainFrame
    
    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 8)
    titleCorner.Parent = titleBar
    
    -- Title text
    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, -40, 1, 0)
    titleText.Position = UDim2.new(0, 10, 0, 0)
    titleText.Text = title or "SilverWare UI"
    titleText.TextColor3 = self.theme.Text
    titleText.BackgroundTransparency = 1
    titleText.Font = Enum.Font.GothamBold
    titleText.TextSize = 14
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.Parent = titleBar
    
    -- Minimize button
    self.minimizeButton = Instance.new("TextButton")
    self.minimizeButton.Name = "MinimizeButton"
    self.minimizeButton.Size = UDim2.new(0, 30, 0, 30)
    self.minimizeButton.Position = UDim2.new(1, -30, 0, 0)
    self.minimizeButton.Text = "-"
    self.minimizeButton.TextColor3 = self.theme.Text
    self.minimizeButton.BackgroundColor3 = self.theme.TitleBar
    self.minimizeButton.Font = Enum.Font.GothamBold
    self.minimizeButton.TextSize = 18
    self.minimizeButton.Parent = titleBar
    
    -- Scrollable content area
    self.scrollFrame = Instance.new("ScrollingFrame")
    self.scrollFrame.Name = "Content"
    self.scrollFrame.Size = UDim2.new(1, 0, 1, -30)
    self.scrollFrame.Position = UDim2.new(0, 0, 0, 30)
    self.scrollFrame.BackgroundTransparency = 1
    self.scrollFrame.ScrollBarThickness = 6
    self.scrollFrame.ScrollBarImageColor3 = self.theme.ScrollBar
    self.scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    self.scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    self.scrollFrame.Parent = self.mainFrame
    
    -- Layout for elements
    local listLayout = Instance.new("UIListLayout")
    listLayout.Padding = UDim.new(0, 8)
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Parent = self.scrollFrame
    
    -- Add padding around elements
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 8)
    padding.PaddingRight = UDim.new(0, 8)
    padding.PaddingTop = UDim.new(0, 8)
    padding.PaddingBottom = UDim.new(0, 8)
    padding.Parent = self.scrollFrame
    
    -- Minimize functionality
    self.minimized = false
    self.minimizeButton.MouseButton1Click:Connect(function()
        self:toggleMinimize()
    end)
    
    -- Store all created elements
    self.elements = {}
    
    return self
end

function UILib:toggleMinimize()
    self.minimized = not self.minimized
    self.scrollFrame.Visible = not self.minimized
    self.minimizeButton.Text = self.minimized and "+" : "-"
    
    if self.minimized then
        self.mainFrame.Size = UDim2.new(0, self.mainFrame.AbsoluteSize.X, 0, 30)
    else
        self.mainFrame.Size = UDim2.new(0, self.mainFrame.AbsoluteSize.X, 0, 250)
    end
end

function UILib:addBtn(name, callback)
    local btn = Instance.new("TextButton")
    btn.Name = name.."Button"
    btn.Size = UDim2.new(1, -16, 0, 32)
    btn.Text = name
    btn.BackgroundColor3 = self.theme.Button
    btn.TextColor3 = self.theme.Text
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 13
    btn.AutoButtonColor = false
    btn.Parent = self.scrollFrame
    
    -- Hover effects
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = self.theme.ButtonHover
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = self.theme.Button
    end)
    
    -- Click handling
    btn.MouseButton1Click:Connect(function()
        callback()
    end)
    
    -- Rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = btn
    
    table.insert(self.elements, btn)
    return btn
end

function UILib:addToggle(name, callback)
    local toggled = false
    local btn = Instance.new("TextButton")
    btn.Name = name.."Toggle"
    btn.Size = UDim2.new(1, -16, 0, 32)
    btn.Text = "☐ "..name
    btn.BackgroundColor3 = self.theme.Button
    btn.TextColor3 = self.theme.Text
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 13
    btn.AutoButtonColor = false
    btn.Parent = self.scrollFrame
    
    -- Hover effects
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = self.theme.ButtonHover
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = toggled and self.theme.ToggleOn or self.theme.Button
    end)
    
    -- Toggle functionality
    btn.MouseButton1Click:Connect(function()
        toggled = not toggled
        btn.Text = (toggled and "☑ " or "☐ ")..name
        btn.BackgroundColor3 = toggled and self.theme.ToggleOn or self.theme.Button
        callback(toggled)
    end)
    
    -- Rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = btn
    
    table.insert(self.elements, btn)
    return btn
end

function UILib:addTextbox(placeholder, callback)
    local box = Instance.new("TextBox")
    box.Name = placeholder.."TextBox"
    box.Size = UDim2.new(1, -16, 0, 32)
    box.PlaceholderText = placeholder
    box.Text = ""
    box.BackgroundColor3 = self.theme.TextBox
    box.TextColor3 = self.theme.Text
    box.Font = Enum.Font.Gotham
    box.TextSize = 13
    box.ClearTextOnFocus = false
    box.Parent = self.scrollFrame
    
    -- Focus handling
    box.Focused:Connect(function()
        box.BackgroundColor3 = self.theme.ButtonHover
    end)
    
    box.FocusLost:Connect(function(enterPressed)
        box.BackgroundColor3 = self.theme.TextBox
        if enterPressed then
            callback(box.Text)
        end
    end)
    
    -- Rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = box
    
    table.insert(self.elements, box)
    return box
end

-- New method to add labels
function UILib:addLabel(text)
    local label = Instance.new("TextLabel")
    label.Name = "Label_"..tostring(#self.elements + 1)
    label.Size = UDim2.new(1, -16, 0, 20)
    label.Text = text
    label.TextColor3 = self.theme.Text
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = self.scrollFrame
    
    table.insert(self.elements, label)
    return label
end

-- New method to destroy the UI
function UILib:destroy()
    if self.gui then
        self.gui:Destroy()
    end
end

-- New method to toggle visibility
function UILib:setVisible(visible)
    if self.gui then
        self.gui.Enabled = visible
    end
end

return UILib
