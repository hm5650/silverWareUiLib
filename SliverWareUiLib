local UILib = {}
UILib.__index = UILib

-- Color constants for easy theming
local COLORS = {
    BACKGROUND = Color3.fromRGB(50, 50, 50),
    BUTTON = Color3.fromRGB(90, 90, 90),
    BUTTON_HOVER = Color3.fromRGB(100, 100, 100),
    TEXTBOX = Color3.fromRGB(70, 70, 70),
    ACCENT = Color3.fromRGB(255, 150, 255),
    TEXT = Color3.fromRGB(255, 255, 255),
    MINIMIZE_BTN = Color3.fromRGB(80, 80, 80)
}

function UILib.new(title)
    local self = setmetatable({}, UILib)
    
    -- Create main GUI container
    local gui = Instance.new("ScreenGui")
    gui.Name = "UILib"
    gui.ResetOnSpawn = false
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    gui.Parent = game:GetService("CoreGui")

    -- Main window frame
    local main = Instance.new("Frame")
    main.Name = "MainWindow"
    main.Size = UDim2.new(0, 180, 0, 130)  -- Slightly larger for better spacing
    main.Position = UDim2.new(0.5, -90, 0.5, -65)
    main.BackgroundColor3 = COLORS.BACKGROUND
    main.BackgroundTransparency = 0.2
    main.BorderSizePixel = 0
    main.Active = true
    main.Draggable = true
    main.ClipsDescendants = true
    main.Parent = gui

    -- Rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = main

    -- Title bar (now includes the title text)
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 22)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundTransparency = 1
    titleBar.Parent = main

    -- Title text
    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, -25, 1, 0)
    titleText.Position = UDim2.new(0, 5, 0, 0)
    titleText.Text = title or "UI Library"
    titleText.TextColor3 = COLORS.ACCENT
    titleText.Font = Enum.Font.SourceSansSemibold
    titleText.TextSize = 16
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.BackgroundTransparency = 1
    titleText.Parent = titleBar

    -- Minimize button
    local minimize = Instance.new("TextButton")
    minimize.Name = "MinimizeButton"
    minimize.Size = UDim2.new(0, 20, 0, 20)
    minimize.Position = UDim2.new(1, -22, 0, 1)
    minimize.Text = "▼"
    minimize.BackgroundColor3 = COLORS.MINIMIZE_BTN
    minimize.TextColor3 = COLORS.ACCENT
    minimize.Font = Enum.Font.SourceSansSemibold
    minimize.TextSize = 14
    minimize.Parent = titleBar

    local minimizeCorner = Instance.new("UICorner")
    minimizeCorner.CornerRadius = UDim.new(0, 10)
    minimizeCorner.Parent = minimize

    -- Content scroll area
    local scroll = Instance.new("ScrollingFrame")
    scroll.Name = "Content"
    scroll.Size = UDim2.new(1, 0, 1, -26)
    scroll.Position = UDim2.new(0, 0, 0, 26)
    scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    scroll.ScrollBarThickness = 6
    scroll.ScrollBarImageColor3 = COLORS.ACCENT
    scroll.BackgroundTransparency = 1
    scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
    scroll.Parent = main

    -- Layout for buttons
    local list = Instance.new("UIListLayout")
    list.Padding = UDim.new(0, 8)  -- Slightly more padding
    list.SortOrder = Enum.SortOrder.LayoutOrder
    list.Parent = scroll

    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 6)
    padding.PaddingRight = UDim.new(0, 6)
    padding.PaddingTop = UDim.new(0, 4)
    padding.PaddingBottom = UDim.new(0, 4)
    padding.Parent = scroll

    self.gui = gui
    self.frame = main
    self.scroll = scroll
    self.minimized = false

    local tweenService = game:GetService("TweenService")
    
    -- Improved minimize animation with sound effect
    minimize.MouseButton1Click:Connect(function()
        self.minimized = not self.minimized
        local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local targetSize = self.minimized and UDim2.new(0, 180, 0, 26) or UDim2.new(0, 180, 0, 130)
        local tween = tweenService:Create(main, tweenInfo, {Size = targetSize})
        tween:Play()
        minimize.Text = self.minimized and "▲" or "▼"
    end)

    -- Button hover effects
    minimize.MouseEnter:Connect(function()
        minimize.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    end)
    
    minimize.MouseLeave:Connect(function()
        minimize.BackgroundColor3 = COLORS.MINIMIZE_BTN
    end)

    return self
end

function UILib:addBtn(name, callback)
    local btn = Instance.new("TextButton")
    btn.Name = name .. "Button"
    btn.Size = UDim2.new(1, -12, 0, 28)  -- Slightly taller
    btn.Text = name
    btn.BackgroundColor3 = COLORS.BUTTON
    btn.TextColor3 = COLORS.ACCENT
    btn.Font = Enum.Font.SourceSansSemibold
    btn.TextSize = 15
    btn.AutoButtonColor = false
    btn.Parent = self.scroll
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = btn
    
    -- Hover effects
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = COLORS.BUTTON_HOVER
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = COLORS.BUTTON
    end)
    
    -- Press effect
    btn.MouseButton1Down:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    end)
    
    btn.MouseButton1Up:Connect(function()
        btn.BackgroundColor3 = COLORS.BUTTON_HOVER
        callback()
    end)
    
    return btn
end

function UILib:addToggle(name, callback)
    local toggled = false
    local btn = Instance.new("TextButton")
    btn.Name = name .. "Toggle"
    btn.Size = UDim2.new(1, -12, 0, 28)
    btn.Text = "Enable " .. name
    btn.BackgroundColor3 = COLORS.BUTTON
    btn.TextColor3 = COLORS.ACCENT
    btn.Font = Enum.Font.SourceSansSemibold
    btn.TextSize = 15
    btn.AutoButtonColor = false
    btn.Parent = self.scroll
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = btn
    
    -- Hover effects
    btn.MouseEnter:Connect(function()
        btn.BackgroundColor3 = COLORS.BUTTON_HOVER
    end)
    
    btn.MouseLeave:Connect(function()
        btn.BackgroundColor3 = COLORS.BUTTON
    end)
    
    -- Press effect
    btn.MouseButton1Down:Connect(function()
        btn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    end)
    
    btn.MouseButton1Up:Connect(function()
        toggled = not toggled
        btn.BackgroundColor3 = COLORS.BUTTON_HOVER
        btn.Text = (toggled and "Disable " or "Enable ") .. name
        callback(toggled)
    end)
    
    return btn
end

function UILib:addTextbox(placeholder, callback)
    local box = Instance.new("TextBox")
    box.Name = placeholder .. "Textbox"
    box.Size = UDim2.new(1, -12, 0, 28)
    box.PlaceholderText = placeholder
    box.Text = ""
    box.BackgroundColor3 = COLORS.TEXTBOX
    box.TextColor3 = COLORS.TEXT
    box.Font = Enum.Font.SourceSans
    box.TextSize = 14
    box.ClearTextOnFocus = false
    box.Parent = self.scroll
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = box
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 8)
    padding.PaddingRight = UDim.new(0, 8)
    padding.Parent = box
    
    -- Focus effects
    box.Focused:Connect(function()
        box.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
    end)
    
    box.FocusLost:Connect(function()
        box.BackgroundColor3 = COLORS.TEXTBOX
        if callback then
            callback(box.Text)
        end
    end)
    
    return box
end

function UILib:setPosition(position)
    self.frame.Position = position
end

function UILib:setSize(size)
    if not self.minimized then
        self.frame.Size = size
    end
end

function UILib:destroy()
    self.gui:Destroy()
    setmetatable(self, nil)
end

return UILib
