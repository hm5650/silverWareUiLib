local UILib = {}
UILib.__index = UILib

-- Enhanced color palette with better contrast
local COLORS = {
    BACKGROUND = Color3.fromRGB(40, 40, 45),
    BUTTON = Color3.fromRGB(65, 65, 75),
    BUTTON_HOVER = Color3.fromRGB(80, 80, 90),
    BUTTON_ACTIVE = Color3.fromRGB(50, 50, 60),
    TEXTBOX = Color3.fromRGB(55, 55, 65),
    TEXTBOX_FOCUSED = Color3.fromRGB(70, 70, 80),
    ACCENT = Color3.fromRGB(175, 120, 255),  -- More pleasant purple
    ACCENT_LIGHT = Color3.fromRGB(200, 150, 255),
    TEXT = Color3.fromRGB(240, 240, 240),
    MINIMIZE_BTN = Color3.fromRGB(60, 60, 70),
    SECTION = Color3.fromRGB(50, 50, 60),
    SLIDER_TRACK = Color3.fromRGB(60, 60, 70),
    SLIDER_THUMB = Color3.fromRGB(175, 120, 255)
}

-- Animation settings
local ANIMATION_SPEED = 0.15
local EASING_STYLE = Enum.EasingStyle.Quad
local EASING_DIRECTION = Enum.EasingDirection.Out

function UILib.new(title)
    local self = setmetatable({}, UILib)
    local tweenService = game:GetService("TweenService")
    
    -- Create main GUI container
    local gui = Instance.new("ScreenGui")
    gui.Name = "UILib_" .. tostring(math.random(1000, 9999))
    gui.ResetOnSpawn = false
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    gui.Parent = game:GetService("CoreGui")

    -- Main window frame
    local main = Instance.new("Frame")
    main.Name = "MainWindow"
    main.Size = UDim2.new(0, 200, 0, 150)  -- More space for elements
    main.Position = UDim2.new(0.5, -100, 0.5, -75)
    main.BackgroundColor3 = COLORS.BACKGROUND
    main.BackgroundTransparency = 0.15
    main.BorderSizePixel = 0
    main.Active = true
    main.Draggable = true
    main.ClipsDescendants = true
    main.Parent = gui

    -- Shadow effect
    local shadow = Instance.new("ImageLabel")
    shadow.Name = "Shadow"
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0, -5, 0, -5)
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.new(0, 0, 0)
    shadow.ImageTransparency = 0.8
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.BackgroundTransparency = 1
    shadow.ZIndex = -1
    shadow.Parent = main

    -- Rounded corners
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = main

    -- Title bar
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 24)
    titleBar.Position = UDim2.new(0, 0, 0, 0)
    titleBar.BackgroundColor3 = COLORS.BACKGROUND
    titleBar.BackgroundTransparency = 0.3
    titleBar.Parent = main

    -- Title bar gradient
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, COLORS.BACKGROUND),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 35))
    })
    gradient.Rotation = 90
    gradient.Parent = titleBar

    -- Title text
    local titleText = Instance.new("TextLabel")
    titleText.Name = "Title"
    titleText.Size = UDim2.new(1, -50, 1, 0)
    titleText.Position = UDim2.new(0, 8, 0, 0)
    titleText.Text = title or "UI Library"
    titleText.TextColor3 = COLORS.ACCENT
    titleText.Font = Enum.Font.GothamSemibold
    titleText.TextSize = 16
    titleText.TextXAlignment = Enum.TextXAlignment.Left
    titleText.BackgroundTransparency = 1
    titleText.Parent = titleBar

    -- Minimize/close buttons container
    local buttonContainer = Instance.new("Frame")
    buttonContainer.Name = "WindowButtons"
    buttonContainer.Size = UDim2.new(0, 44, 1, 0)
    buttonContainer.Position = UDim2.new(1, -44, 0, 0)
    buttonContainer.BackgroundTransparency = 1
    buttonContainer.Parent = titleBar

    -- Minimize button
    local minimize = Instance.new("TextButton")
    minimize.Name = "MinimizeButton"
    minimize.Size = UDim2.new(0, 20, 0, 20)
    minimize.Position = UDim2.new(0, 2, 0.5, -10)
    minimize.Text = "─"
    minimize.BackgroundColor3 = COLORS.MINIMIZE_BTN
    minimize.TextColor3 = COLORS.ACCENT
    minimize.Font = Enum.Font.GothamBold
    minimize.TextSize = 16
    minimize.Parent = buttonContainer

    local minimizeCorner = Instance.new("UICorner")
    minimizeCorner.CornerRadius = UDim.new(0, 6)
    minimizeCorner.Parent = minimize

    -- Close button
    local close = Instance.new("TextButton")
    close.Name = "CloseButton"
    close.Size = UDim2.new(0, 20, 0, 20)
    close.Position = UDim2.new(0, 22, 0.5, -10)
    close.Text = "×"
    close.BackgroundColor3 = COLORS.MINIMIZE_BTN
    close.TextColor3 = COLORS.ACCENT
    close.Font = Enum.Font.GothamBold
    close.TextSize = 18
    close.Parent = buttonContainer

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 6)
    closeCorner.Parent = close

    -- Content scroll area
    local scroll = Instance.new("ScrollingFrame")
    scroll.Name = "Content"
    scroll.Size = UDim2.new(1, 0, 1, -28)
    scroll.Position = UDim2.new(0, 0, 0, 28)
    scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
    scroll.ScrollBarThickness = 6
    scroll.ScrollBarImageColor3 = COLORS.ACCENT
    scroll.ScrollBarImageTransparency = 0.5
    scroll.BackgroundTransparency = 1
    scroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
    scroll.Parent = main

    -- Layout for buttons
    local list = Instance.new("UIListLayout")
    list.Padding = UDim.new(0, 8)
    list.SortOrder = Enum.SortOrder.LayoutOrder
    list.Parent = scroll

    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 8)
    padding.PaddingRight = UDim.new(0, 8)
    padding.PaddingTop = UDim.new(0, 6)
    padding.PaddingBottom = UDim.new(0, 6)
    padding.Parent = scroll

    self.gui = gui
    self.frame = main
    self.scroll = scroll
    self.minimized = false
    self.elements = {}

    -- Button hover animations
    local function setupButtonHover(button, normalColor, hoverColor)
        local originalSize = button.Size
        local hoverSize = UDim2.new(originalSize.X.Scale, originalSize.X.Offset, originalSize.Y.Scale, originalSize.Y.Offset + 2)
        
        button.MouseEnter:Connect(function()
            tweenService:Create(button, TweenInfo.new(ANIMATION_SPEED, EASING_STYLE, EASING_DIRECTION), {
                BackgroundColor3 = hoverColor,
                Size = hoverSize
            }):Play()
        end)
        
        button.MouseLeave:Connect(function()
            tweenService:Create(button, TweenInfo.new(ANIMATION_SPEED, EASING_STYLE, EASING_DIRECTION), {
                BackgroundColor3 = normalColor,
                Size = originalSize
            }):Play()
        end)
        
        button.MouseButton1Down:Connect(function()
            tweenService:Create(button, TweenInfo.new(ANIMATION_SPEED/2, EASING_STYLE, EASING_DIRECTION), {
                BackgroundColor3 = COLORS.BUTTON_ACTIVE
            }):Play()
        end)
        
        button.MouseButton1Up:Connect(function()
            tweenService:Create(button, TweenInfo.new(ANIMATION_SPEED/2, EASING_STYLE, EASING_DIRECTION), {
                BackgroundColor3 = hoverColor
            }):Play()
        end)
    end

    -- Set up window control buttons
    setupButtonHover(minimize, COLORS.MINIMIZE_BTN, Color3.fromRGB(80, 80, 90))
    setupButtonHover(close, COLORS.MINIMIZE_BTN, Color3.fromRGB(200, 60, 60))

    -- Minimize animation
    minimize.MouseButton1Click:Connect(function()
        self.minimized = not self.minimized
        local tweenInfo = TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local targetSize = self.minimized and UDim2.new(0, 200, 0, 28) or UDim2.new(0, 200, 0, 150)
        local tween = tweenService:Create(main, tweenInfo, {Size = targetSize})
        tween:Play()
        minimize.Text = self.minimized and "+" : "─"
    end)

    -- Close button functionality
    close.MouseButton1Click:Connect(function()
        self:destroy()
    end)

    return self
end

function UILib:addSection(name)
    local section = Instance.new("Frame")
    section.Name = name .. "Section"
    section.Size = UDim2.new(1, -12, 0, 30)
    section.BackgroundColor3 = COLORS.SECTION
    section.BackgroundTransparency = 0.5
    section.Parent = self.scroll
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = section
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, -10, 1, 0)
    label.Position = UDim2.new(0, 8, 0, 0)
    label.Text = string.upper(name)
    label.TextColor3 = COLORS.ACCENT
    label.Font = Enum.Font.GothamMedium
    label.TextSize = 12
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.BackgroundTransparency = 1
    label.Parent = section
    
    table.insert(self.elements, section)
    return section
end

function UILib:addBtn(name, callback)
    local btn = Instance.new("TextButton")
    btn.Name = name .. "Button"
    btn.Size = UDim2.new(1, -12, 0, 30)
    btn.Text = name
    btn.BackgroundColor3 = COLORS.BUTTON
    btn.TextColor3 = COLORS.TEXT
    btn.Font = Enum.Font.GothamMedium
    btn.TextSize = 14
    btn.AutoButtonColor = false
    btn.Parent = self.scroll
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = btn
    
    -- Hover effects with animation
    btn.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(btn, TweenInfo.new(0.15), {
            BackgroundColor3 = COLORS.BUTTON_HOVER,
            TextColor3 = COLORS.ACCENT_LIGHT
        }):Play()
    end)
    
    btn.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(btn, TweenInfo.new(0.15), {
            BackgroundColor3 = COLORS.BUTTON,
            TextColor3 = COLORS.TEXT
        }):Play()
    end)
    
    -- Press effect
    btn.MouseButton1Down:Connect(function()
        game:GetService("TweenService"):Create(btn, TweenInfo.new(0.1), {
            BackgroundColor3 = COLORS.BUTTON_ACTIVE
        }):Play()
    end)
    
    btn.MouseButton1Up:Connect(function()
        game:GetService("TweenService"):Create(btn, TweenInfo.new(0.15), {
            BackgroundColor3 = COLORS.BUTTON_HOVER
        }):Play()
        callback()
    end)
    
    table.insert(self.elements, btn)
    return btn
end

function UILib:addToggle(name, callback)
    local toggled = false
    local btn = Instance.new("TextButton")
    btn.Name = name .. "Toggle"
    btn.Size = UDim2.new(1, -12, 0, 30)
    btn.Text = "◯ " .. name
    btn.BackgroundColor3 = COLORS.BUTTON
    btn.TextColor3 = COLORS.TEXT
    btn.Font = Enum.Font.GothamMedium
    btn.TextSize = 14
    btn.AutoButtonColor = false
    btn.Parent = self.scroll
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = btn
    
    -- Hover effects
    btn.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(btn, TweenInfo.new(0.15), {
            BackgroundColor3 = COLORS.BUTTON_HOVER,
            TextColor3 = COLORS.ACCENT_LIGHT
        }):Play()
    end)
    
    btn.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(btn, TweenInfo.new(0.15), {
            BackgroundColor3 = COLORS.BUTTON,
            TextColor3 = toggled and COLORS.ACCENT or COLORS.TEXT
        }):Play()
    end)
    
    -- Press effect
    btn.MouseButton1Down:Connect(function()
        game:GetService("TweenService"):Create(btn, TweenInfo.new(0.1), {
            BackgroundColor3 = COLORS.BUTTON_ACTIVE
        }):Play()
    end)
    
    btn.MouseButton1Up:Connect(function()
        toggled = not toggled
        local newText = (toggled and "◉ " or "◯ ") .. name
        game:GetService("TweenService"):Create(btn, TweenInfo.new(0.15), {
            BackgroundColor3 = COLORS.BUTTON_HOVER,
            TextColor3 = toggled and COLORS.ACCENT or COLORS.TEXT
        }):Play()
        btn.Text = newText
        callback(toggled)
    end)
    
    table.insert(self.elements, btn)
    return btn
end

function UILib:addTextbox(placeholder, callback)
    local container = Instance.new("Frame")
    container.Name = placeholder .. "TextboxContainer"
    container.Size = UDim2.new(1, -12, 0, 30)
    container.BackgroundTransparency = 1
    container.Parent = self.scroll
    
    local box = Instance.new("TextBox")
    box.Name = placeholder .. "Textbox"
    box.Size = UDim2.new(1, 0, 1, 0)
    box.PlaceholderText = placeholder
    box.Text = ""
    box.BackgroundColor3 = COLORS.TEXTBOX
    box.TextColor3 = COLORS.TEXT
    box.Font = Enum.Font.Gotham
    box.TextSize = 14
    box.ClearTextOnFocus = false
    box.Parent = container
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = box
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 8)
    padding.PaddingRight = UDim.new(0, 8)
    padding.Parent = box
    
    -- Focus effects
    box.Focused:Connect(function()
        game:GetService("TweenService"):Create(box, TweenInfo.new(0.15), {
            BackgroundColor3 = COLORS.TEXTBOX_FOCUSED,
            TextColor3 = COLORS.ACCENT_LIGHT
        }):Play()
    end)
    
    box.FocusLost:Connect(function()
        game:GetService("TweenService"):Create(box, TweenInfo.new(0.15), {
            BackgroundColor3 = COLORS.TEXTBOX,
            TextColor3 = COLORS.TEXT
        }):Play()
        if callback then
            callback(box.Text)
        end
    end)
    
    table.insert(self.elements, container)
    return box
end

function UILib:addSlider(name, min, max, defaultValue, callback)
    local container = Instance.new("Frame")
    container.Name = name .. "SliderContainer"
    container.Size = UDim2.new(1, -12, 0, 50)
    container.BackgroundTransparency = 1
    container.Parent = self.scroll
    
    local label = Instance.new("TextLabel")
    label.Name = "Label"
    label.Size = UDim2.new(1, 0, 0, 18)
    label.Text = name .. ": " .. defaultValue
    label.TextColor3 = COLORS.TEXT
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.BackgroundTransparency = 1
    label.Parent = container
    
    local track = Instance.new("Frame")
    track.Name = "Track"
    track.Size = UDim2.new(1, 0, 0, 6)
    track.Position = UDim2.new(0, 0, 0, 24)
    track.BackgroundColor3 = COLORS.SLIDER_TRACK
    track.Parent = container
    
    local trackCorner = Instance.new("UICorner")
    trackCorner.CornerRadius = UDim.new(1, 0)
    trackCorner.Parent = track
    
    local fill = Instance.new("Frame")
    fill.Name = "Fill"
    fill.Size = UDim2.new((defaultValue - min) / (max - min), 0, 1, 0)
    fill.BackgroundColor3 = COLORS.ACCENT
    fill.Parent = track
    
    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(1, 0)
    fillCorner.Parent = fill
    
    local thumb = Instance.new("TextButton")
    thumb.Name = "Thumb"
    thumb.Size = UDim2.new(0, 16, 0, 16)
    thumb.Position = UDim2.new(fill.Size.X.Scale, -8, 0.5, -8)
    thumb.Text = ""
    thumb.BackgroundColor3 = COLORS.SLIDER_THUMB
    thumb.AutoButtonColor = false
    thumb.Parent = container
    
    local thumbCorner = Instance.new("UICorner")
    thumbCorner.CornerRadius = UDim.new(1, 0)
    thumbCorner.Parent = thumb
    
    -- Slider logic
    local function updateValue(x)
        local relativeX = math.clamp(x - track.AbsolutePosition.X, 0, track.AbsoluteSize.X)
        local ratio = relativeX / track.AbsoluteSize.X
        local value = math.floor(min + (max - min) * ratio)
        
        fill.Size = UDim2.new(ratio, 0, 1, 0)
        thumb.Position = UDim2.new(ratio, -8, 0.5, -8)
        label.Text = name .. ": " .. value
        
        if callback then
            callback(value)
        end
    end
    
    thumb.MouseButton1Down:Connect(function()
        local connection
        connection = game:GetService("UserInputService").InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                updateValue(input.Position.X)
            end
        end)
        
        game:GetService("UserInputService").InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                connection:Disconnect()
            end
        end)
    end)
    
    track.MouseButton1Down:Connect(function(x, y)
        updateValue(x)
    end)
    
    table.insert(self.elements, container)
    return {
        container = container,
        label = label,
        track = track,
        fill = fill,
        thumb = thumb
    }
end

function UILib:setPosition(position)
    self.frame.Position = position
end

function UILib:setSize(size)
    if not self.minimized then
        self.frame.Size = size
    end
end

function UILib:setTheme(themeTable)
    for key, color in pairs(themeTable) do
        if COLORS[key] then
            COLORS[key] = color
        end
    end
    -- TODO: Update existing elements with new colors
end

function UILib:destroy()
    for _, element in pairs(self.elements) do
        element:Destroy()
    end
    self.gui:Destroy()
    setmetatable(self, nil)
end

return UILib
