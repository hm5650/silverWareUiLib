local UILib = {}

function UILib:Create(title)
    local lib = {}
    local minimized = false
    local originalSize = UDim2.new(0, 200, 0, 120)
    local minimizedSize = UDim2.new(0, 200, 0, 30)
    
    -- Create main screen GUI
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "UILib"
    screenGui.Parent = game:GetService("CoreGui")
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Main window with outline
    local main = Instance.new("Frame")
    main.Name = "MainWindow"
    main.Size = originalSize
    main.Position = UDim2.new(0.5, -100, 0.5, -60)
    main.BackgroundColor3 = Color3.fromRGB(20, 25, 30)
    main.BackgroundTransparency = 0.1
    main.BorderColor3 = Color3.fromRGB(60, 60, 60) -- This creates the outline
    main.BorderSizePixel = 1
    main.Active = true
    main.Draggable = true
    main.ClipsDescendants = true -- Important for hiding elements when minimized
    main.Parent = screenGui
    
    -- Corner rounding for main frame
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 8)
    uiCorner.Parent = main
    
    -- Title bar with minimize button
    local titleBar = Instance.new("Frame")
    titleBar.Name = "TitleBar"
    titleBar.Size = UDim2.new(1, 0, 0, 30)
    titleBar.BackgroundTransparency = 1
    titleBar.Parent = main
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "Title"
    titleLabel.Size = UDim2.new(1, -30, 1, 0)
    titleLabel.Position = UDim2.new(0, 0, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
    titleLabel.Text = title or "UI Library"
    titleLabel.Font = Enum.Font.GothamSemibold
    titleLabel.TextSize = 16
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.TextYAlignment = Enum.TextYAlignment.Center
    titleLabel.Parent = titleBar
    
    -- Minimize button
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Name = "MinimizeButton"
    minimizeButton.Size = UDim2.new(0, 24, 0, 24)
    minimizeButton.Position = UDim2.new(1, -24, 0.5, -12)
    minimizeButton.BackgroundTransparency = 1
    minimizeButton.TextColor3 = Color3.fromRGB(220, 220, 220)
    minimizeButton.Text = "-"
    minimizeButton.Font = Enum.Font.GothamBold
    minimizeButton.TextSize = 18
    minimizeButton.Parent = titleBar
    
    -- Content frame (holds all buttons/elements)
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "Content"
    contentFrame.Size = UDim2.new(1, 0, 1, -30)
    contentFrame.Position = UDim2.new(0, 0, 0, 30)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = main
    
    -- Layout for elements
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 6)
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.Parent = contentFrame
    
    -- Padding inside content frame
    local padding = Instance.new("UIPadding")
    padding.PaddingTop = UDim.new(0, 8)
    padding.PaddingBottom = UDim.new(0, 8)
    padding.PaddingLeft = UDim.new(0, 8)
    padding.PaddingRight = UDim.new(0, 8)
    padding.Parent = contentFrame
    
    -- Button creation function
    local function createButton(text, callback)
        local btn = Instance.new("TextButton")
        btn.Name = text.."Button"
        btn.Size = UDim2.new(1, -10, 0, 28)
        btn.BackgroundColor3 = Color3.fromRGB(45, 50, 55)
        btn.TextColor3 = Color3.fromRGB(240, 240, 240)
        btn.Text = text
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 14
        btn.AutoButtonColor = true
        btn.LayoutOrder = #contentFrame:GetChildren() + 1
        btn.Parent = contentFrame
        
        -- Corner rounding
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = btn
        
        -- Hover effects
        btn.MouseEnter:Connect(function()
            game:GetService("TweenService"):Create(btn, TweenInfo.new(0.1), {
                BackgroundColor3 = Color3.fromRGB(55, 60, 65)
            }):Play()
        end)
        
        btn.MouseLeave:Connect(function()
            game:GetService("TweenService"):Create(btn, TweenInfo.new(0.1), {
                BackgroundColor3 = Color3.fromRGB(45, 50, 55)
            }):Play()
        end)
        
        -- Click event
        btn.MouseButton1Click:Connect(function()
            if callback then 
                -- Click animation
                game:GetService("TweenService"):Create(btn, TweenInfo.new(0.1), {
                    BackgroundColor3 = Color3.fromRGB(65, 70, 75)
                }):Play()
                wait(0.1)
                game:GetService("TweenService"):Create(btn, TweenInfo.new(0.1), {
                    BackgroundColor3 = Color3.fromRGB(45, 50, 55)
                }):Play()
                
                callback() 
            end
        end)
    end
    
    -- Toggle creation function
    local function createToggle(text, callback)
        local toggleFrame = Instance.new("Frame")
        toggleFrame.Name = text.."Toggle"
        toggleFrame.Size = UDim2.new(1, -10, 0, 28)
        toggleFrame.BackgroundTransparency = 1
        toggleFrame.LayoutOrder = #contentFrame:GetChildren() + 1
        toggleFrame.Parent = contentFrame
        
        local btn = Instance.new("TextButton")
        btn.Name = "ToggleButton"
        btn.Size = UDim2.new(1, 0, 1, 0)
        btn.BackgroundColor3 = Color3.fromRGB(35, 40, 45)
        btn.TextColor3 = Color3.fromRGB(240, 240, 240)
        btn.Text = "◯ "..text
        btn.Font = Enum.Font.Gotham
        btn.TextSize = 14
        btn.TextXAlignment = Enum.TextXAlignment.Left
        btn.AutoButtonColor = false
        
        -- Corner rounding
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = btn
        
        -- Toggle state indicator
        local indicator = Instance.new("Frame")
        indicator.Name = "Indicator"
        indicator.Size = UDim2.new(0, 16, 0, 16)
        indicator.Position = UDim2.new(1, -18, 0.5, -8)
        indicator.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        indicator.BorderSizePixel = 0
        
        local indicatorCorner = Instance.new("UICorner")
        indicatorCorner.CornerRadius = UDim.new(1, 0)
        indicatorCorner.Parent = indicator
        
        indicator.Parent = btn
        
        local toggled = false
        btn.MouseButton1Click:Connect(function()
            toggled = not toggled
            if toggled then
                btn.Text = "● "..text
                game:GetService("TweenService"):Create(indicator, TweenInfo.new(0.1), {
                    BackgroundColor3 = Color3.fromRGB(100, 180, 100)
                }):Play()
            else
                btn.Text = "◯ "..text
                game:GetService("TweenService"):Create(indicator, TweenInfo.new(0.1), {
                    BackgroundColor3 = Color3.fromRGB(80, 80, 80)
                }):Play()
            end
            if callback then callback(toggled) end
        end)
        
        -- Hover effects
        btn.MouseEnter:Connect(function()
            game:GetService("TweenService"):Create(btn, TweenInfo.new(0.1), {
                BackgroundColor3 = Color3.fromRGB(45, 50, 55)
            }):Play()
        end)
        
        btn.MouseLeave:Connect(function()
            game:GetService("TweenService"):Create(btn, TweenInfo.new(0.1), {
                BackgroundColor3 = Color3.fromRGB(35, 40, 45)
            }):Play()
        end)
        
        btn.Parent = toggleFrame
    end
    
    -- Textbox creation function
    local function createTextbox(default, placeholder, callback)
        local box = Instance.new("TextBox")
        box.Name = "InputBox"
        box.Size = UDim2.new(1, -10, 0, 28)
        box.BackgroundColor3 = Color3.fromRGB(40, 45, 50)
        box.TextColor3 = Color3.fromRGB(240, 240, 240)
        box.PlaceholderText = placeholder or "Enter text..."
        box.Text = default or ""
        box.Font = Enum.Font.Gotham
        box.TextSize = 14
        box.ClearTextOnFocus = false
        box.LayoutOrder = #contentFrame:GetChildren() + 1
        box.Parent = contentFrame
        
        -- Corner rounding
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = box
        
        -- Focus effects
        box.Focused:Connect(function()
            game:GetService("TweenService"):Create(box, TweenInfo.new(0.1), {
                BackgroundColor3 = Color3.fromRGB(50, 55, 60)
            }):Play()
        end)
        
        box.FocusLost:Connect(function()
            game:GetService("TweenService"):Create(box, TweenInfo.new(0.1), {
                BackgroundColor3 = Color3.fromRGB(40, 45, 50)
            }):Play()
            if callback then callback(box.Text) end
        end)
    end
    
    -- Minimize button functionality
    minimizeButton.MouseButton1Click:Connect(function()
        minimized = not minimized
        
        -- Change button text
        minimizeButton.Text = minimized and "+" or "-"
        
        -- Animate the collapse/expand
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
        
        if minimized then
            -- Collapse (hides contentFrame automatically due to ClipsDescendants)
            game:GetService("TweenService"):Create(main, tweenInfo, {
                Size = minimizedSize
            }):Play()
        else
            -- Expand (reveals contentFrame)
            game:GetService("TweenService"):Create(main, tweenInfo, {
                Size = originalSize
            }):Play()
        end
    end)
    
    -- Add elements to the library
    function lib:add(btnType, ...)
        local args = {...}
        if btnType == "btn" then
            createButton(unpack(args))
        elseif btnType == "toggle" then
            createToggle(unpack(args))
        elseif btnType == "textbox" then
            createTextbox(unpack(args))
        elseif btnType == "title" then
            titleLabel.Text = args[1]
        end
    end
    
    -- Destroy the UI
    function lib:destroy()
        screenGui:Destroy()
    end
    
    return lib
end

return UILib
